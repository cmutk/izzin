[{"/Users/zhunor/workspace/react-apps/izzin/src/App.tsx":"1","/Users/zhunor/workspace/react-apps/izzin/src/lib/api.ts":"2","/Users/zhunor/workspace/react-apps/izzin/src/manager/Employee/index.ts":"3","/Users/zhunor/workspace/react-apps/izzin/src/manager/Employee/types.ts":"4"},{"size":160,"mtime":1626016114657,"results":"5","hashOfConfig":"6"},{"size":1022,"mtime":1626028165441,"results":"7","hashOfConfig":"6"},{"size":321,"mtime":1626030267344,"results":"8","hashOfConfig":"6"},{"size":192,"mtime":1626030238783,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1s0an0v",{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zhunor/workspace/react-apps/izzin/src/App.tsx",[],"/Users/zhunor/workspace/react-apps/izzin/src/lib/api.ts",["18"],"/Users/zhunor/workspace/react-apps/izzin/src/manager/Employee/index.ts",[],"/Users/zhunor/workspace/react-apps/izzin/src/manager/Employee/types.ts",[],{"ruleId":"19","severity":1,"message":"20","line":3,"column":37,"nodeType":"21","messageId":"22","endLine":3,"endColumn":40,"suggestions":"23"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["24","25"],{"messageId":"26","fix":"27","desc":"28"},{"messageId":"29","fix":"30","desc":"31"},"suggestUnknown",{"range":"32","text":"33"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"32","text":"34"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[112,115],"unknown","never"]